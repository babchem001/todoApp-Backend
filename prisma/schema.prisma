// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Todo{
  id Int @id @default(autoincrement())
  title String
  description String
  isComplete Boolean @default(false)
  status String @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user User @relation(fields: [userId], references: [id])

@@map("todos")
}


model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  isAdmin Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship linkage
  todos Todo[]
  profiles Profile?
  wallet Wallet?


  @@map("users")
}
model Profile{
  id Int @id @default(autoincrement())
  bio String?
  avatar String?
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

// Relationship linkage
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

  @@map("profiles")
}
model Wallet{
  id Int @id @default(autoincrement())
  balance Decimal @db.Decimal(10, 2) @default(0.00)
  userId  Int @unique
  user User @relation(fields: [userId], references: [id])

  transactionsSent Transaction[] @relation("Sender")
  transactionsReceived Transaction[] @relation("Receiver")

  @@map("wallets")

}
model Transaction{
  id Int @id @default(autoincrement())
  amount Decimal @db.Decimal(10, 2) @default(0.00)
  type String // "send" | "receive" | "fund"
  fromId Int? // null if it's a funding transaction
  toId Int? // null if money was withdrawn
  createdAt DateTime @default(now())

  sender Wallet? @relation("Sender", fields: [fromId], references: [id])
  receiver Wallet? @relation("Receiver", fields: [toId], references: [id])

  @@map("transactions")
}
